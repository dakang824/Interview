(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{514:function(t,a,v){"use strict";v.r(a);var s=v(6),_=Object(s.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("p",[t._v("一个 Java 程序可以认为是一系列对象的集合，而这些对象通过调用彼此的方法来协同工作。下面简要介绍下类、对象、方法和实例变量的概念。")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("对象")]),t._v("：对象是类的一个实例，有状态和行为。例如，一条狗是一个对象，它的状态有：颜色、名字、品种；行为有：摇尾巴、叫、吃等。")]),t._v(" "),v("li",[v("strong",[t._v("类")]),t._v("：类是一个模板，它描述一类对象的行为和状态。")]),t._v(" "),v("li",[v("strong",[t._v("方法")]),t._v("：方法就是行为，一个类可以有很多方法。逻辑运算、数据修改以及所有动作都是在方法中完成的。")]),t._v(" "),v("li",[v("strong",[t._v("实例变量")]),t._v("：每个对象都有独特的实例变量，对象的状态由这些实例变量的值决定。")])]),t._v(" "),v("hr"),t._v(" "),v("h2",{attrs:{id:"第一个-java-程序"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第一个-java-程序"}},[t._v("#")]),t._v(" 第一个 Java 程序")]),t._v(" "),v("p",[t._v("下面看一个简单的 Java 程序，它将输出字符串 "),v("em",[t._v("Hello World")])]),t._v(" "),v("h3",{attrs:{id:"实例"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#实例"}},[t._v("#")]),t._v(" 实例")]),t._v(" "),v("div",{staticClass:"language-java line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-java"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HelloWorld")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 第一个Java程序\n     * 它将输出字符串 Hello World\n     */")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出 Hello World")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br"),v("span",{staticClass:"line-number"},[t._v("3")]),v("br"),v("span",{staticClass:"line-number"},[t._v("4")]),v("br"),v("span",{staticClass:"line-number"},[t._v("5")]),v("br"),v("span",{staticClass:"line-number"},[t._v("6")]),v("br"),v("span",{staticClass:"line-number"},[t._v("7")]),v("br"),v("span",{staticClass:"line-number"},[t._v("8")]),v("br")])]),v("p",[v("img",{attrs:{src:"https://dakang824.github.io/imgs/folder_a/662E827A-FA32-4464-B0BD-40087F429E98.jpg",alt:""}})]),t._v(" "),v("h2",{attrs:{id:"基本语法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#基本语法"}},[t._v("#")]),t._v(" 基本语法")]),t._v(" "),v("p",[t._v("编写 Java 程序时，应注意以下几点：")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("大小写敏感")]),t._v("：Java 是大小写敏感的，这就意味着标识符 Hello 与 hello 是不同的。")]),t._v(" "),v("li",[v("strong",[t._v("类名")]),t._v("：对于所有的类来说，类名的首字母应该大写。如果类名由若干单词组成，那么每个单词的首字母应该大写，例如 "),v("strong",[t._v("MyFirstJavaClass")]),t._v(" 。")]),t._v(" "),v("li",[v("strong",[t._v("方法名")]),t._v("：所有的方法名都应该以小写字母开头。如果方法名含有若干单词，则后面的每个单词首字母大写。")]),t._v(" "),v("li",[v("strong",[t._v("源文件名")]),t._v("：源文件名必须和类名相同。当保存文件的时候，你应该使用类名作为文件名保存（切记 Java 是大小写敏感的），文件名的后缀为 "),v("strong",[t._v(".java")]),t._v("。（如果文件名和类名不相同则会导致编译错误）。")]),t._v(" "),v("li",[v("strong",[t._v("主方法入口")]),t._v("：所有的 Java 程序由 "),v("strong",[t._v("public static void main(String[] args)")]),t._v(" 方法开始执行。")])]),t._v(" "),v("hr"),t._v(" "),v("h2",{attrs:{id:"java-标识符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java-标识符"}},[t._v("#")]),t._v(" Java 标识符")]),t._v(" "),v("p",[t._v("Java 所有的组成部分都需要名字。类名、变量名以及方法名都被称为标识符。")]),t._v(" "),v("p",[t._v("关于 Java 标识符，有以下几点需要注意：")]),t._v(" "),v("ul",[v("li",[t._v("所有的标识符都应该以字母（A-Z 或者 a-z）,美元符（$）、或者下划线（_）开始")]),t._v(" "),v("li",[t._v("首字符之后可以是字母（A-Z 或者 a-z）,美元符（$）、下划线（_）或数字的任何字符组合")]),t._v(" "),v("li",[t._v("关键字不能用作标识符")]),t._v(" "),v("li",[t._v("标识符是大小写敏感的")]),t._v(" "),v("li",[t._v("合法标识符举例：age、$salary、_value、__1_value")]),t._v(" "),v("li",[t._v("非法标识符举例：123abc、-salary")])]),t._v(" "),v("hr"),t._v(" "),v("h2",{attrs:{id:"java-修饰符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java-修饰符"}},[t._v("#")]),t._v(" Java 修饰符")]),t._v(" "),v("p",[t._v("像其他语言一样，Java 可以使用修饰符来修饰类中方法和属性。主要有两类修饰符：")]),t._v(" "),v("ul",[v("li",[t._v("访问控制修饰符 : default, public , protected, private")]),t._v(" "),v("li",[t._v("非访问控制修饰符 : final, abstract, static, synchronized")])]),t._v(" "),v("p",[t._v("在后面的章节中我们会深入讨论 Java 修饰符。")]),t._v(" "),v("hr"),t._v(" "),v("h2",{attrs:{id:"java-变量"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java-变量"}},[t._v("#")]),t._v(" Java 变量")]),t._v(" "),v("p",[t._v("Java 中主要有如下几种类型的变量")]),t._v(" "),v("ul",[v("li",[t._v("局部变量")]),t._v(" "),v("li",[t._v("类变量（静态变量）")]),t._v(" "),v("li",[t._v("成员变量（非静态变量）")])]),t._v(" "),v("hr"),t._v(" "),v("h2",{attrs:{id:"java-数组"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java-数组"}},[t._v("#")]),t._v(" Java 数组")]),t._v(" "),v("p",[t._v("数组是储存在堆上的对象，可以保存多个同类型变量。在后面的章节中，我们将会学到如何声明、构造以及初始化一个数组。")]),t._v(" "),v("hr"),t._v(" "),v("h2",{attrs:{id:"java-枚举"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java-枚举"}},[t._v("#")]),t._v(" Java 枚举")]),t._v(" "),v("p",[t._v("Java 5.0 引入了枚举，枚举限制变量只能是预先设定好的值。使用枚举可以减少代码中的 bug。")]),t._v(" "),v("p",[t._v("例如，我们为果汁店设计一个程序，它将限制果汁为小杯、中杯、大杯。这就意味着它不允许顾客点除了这三种尺寸外的果汁。")]),t._v(" "),v("h3",{attrs:{id:"实例-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#实例-2"}},[t._v("#")]),t._v(" 实例")]),t._v(" "),v("div",{staticClass:"language-java line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-java"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FreshJuice")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FreshJuiceSize")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" SMALL"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MEDIUM "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LARGE "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FreshJuiceSize")]),t._v(" size"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FreshJuiceTest")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FreshJuice")]),t._v(" juice "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FreshJuice")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      juice"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("size "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FreshJuice"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FreshJuiceSize")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MEDIUM  "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br"),v("span",{staticClass:"line-number"},[t._v("3")]),v("br"),v("span",{staticClass:"line-number"},[t._v("4")]),v("br"),v("span",{staticClass:"line-number"},[t._v("5")]),v("br"),v("span",{staticClass:"line-number"},[t._v("6")]),v("br"),v("span",{staticClass:"line-number"},[t._v("7")]),v("br"),v("span",{staticClass:"line-number"},[t._v("8")]),v("br"),v("span",{staticClass:"line-number"},[t._v("9")]),v("br"),v("span",{staticClass:"line-number"},[t._v("10")]),v("br"),v("span",{staticClass:"line-number"},[t._v("11")]),v("br")])]),v("p",[t._v("**注意：**枚举可以单独声明或者声明在类里面。方法、变量、构造函数也可以在枚举中定义。")]),t._v(" "),v("hr"),t._v(" "),v("h2",{attrs:{id:"java-关键字"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java-关键字"}},[t._v("#")]),t._v(" Java 关键字")]),t._v(" "),v("p",[t._v("下面列出了 Java 关键字。这些保留字不能用于常量、变量、和任何标识符的名称。")]),t._v(" "),v("table",{staticClass:"reference"},[v("tbody",[v("tr",[v("th",{},[t._v("类别")]),t._v(" "),v("th",{},[t._v("关键字")]),t._v(" "),v("th",{},[t._v("说明")])]),t._v(" "),v("tr",[v("td",{attrs:{rowspan:"4",align:"center"}},[t._v("访问控制")]),t._v(" "),v("td",{},[t._v("private")]),t._v(" "),v("td",{},[t._v("私有的")])]),t._v(" "),v("tr",[v("td",[t._v("protected")]),t._v(" "),v("td",{},[t._v("受保护的")])]),t._v(" "),v("tr",[v("td",[t._v("public")]),t._v(" "),v("td",[t._v("公共的")])]),t._v(" "),v("tr",[v("td",[t._v("default ")]),t._v(" "),v("td",[t._v("默认")])]),t._v(" "),v("tr",[v("td",{attrs:{rowspan:"13",align:"center"}},[t._v("类、方法和变量修饰符")]),t._v(" "),v("td",[t._v("abstract")]),t._v(" "),v("td",[t._v("声明抽象")])]),t._v(" "),v("tr",[v("td",[t._v("class")]),t._v(" "),v("td",[t._v("类")])]),t._v(" "),v("tr",[v("td",[t._v("extends")]),t._v(" "),v("td",[t._v("扩充,继承")])]),t._v(" "),v("tr",[v("td",[t._v("final")]),t._v(" "),v("td",[t._v("最终值,不可改变的")])]),t._v(" "),v("tr",[v("td",[t._v("implements")]),t._v(" "),v("td",[t._v("实现（接口）")])]),t._v(" "),v("tr",[v("td",[t._v("interface")]),t._v(" "),v("td",[t._v("接口")])]),t._v(" "),v("tr",[v("td",[t._v("native")]),t._v(" "),v("td",[t._v("本地，原生方法（非 Java 实现）")])]),t._v(" "),v("tr",[v("td",[t._v("new")]),t._v(" "),v("td",[t._v("新,创建")])]),t._v(" "),v("tr",[v("td",[t._v("static")]),t._v(" "),v("td",[t._v("静态")])]),t._v(" "),v("tr",[v("td",[t._v("strictfp")]),t._v(" "),v("td",[t._v("严格,精准")])]),t._v(" "),v("tr",[v("td",[t._v("synchronized")]),t._v(" "),v("td",[t._v("线程,同步")])]),t._v(" "),v("tr",[v("td",[t._v("transient")]),t._v(" "),v("td",[t._v("短暂")])]),t._v(" "),v("tr",[v("td",[t._v("volatile")]),t._v(" "),v("td",[t._v("易失")])]),t._v(" "),v("tr",[v("td",{attrs:{rowspan:"12",align:"center"}},[t._v("程序控制语句")]),t._v(" "),v("td",[t._v("break")]),t._v(" "),v("td",[t._v("跳出循环")])]),t._v(" "),v("tr",[v("td",[t._v("case")]),t._v(" "),v("td",[t._v("定义一个值以供 switch 选择")])]),t._v(" "),v("tr",[v("td",[t._v("continue")]),t._v(" "),v("td",[t._v("继续")])]),t._v(" "),v("tr",[v("td",[t._v("default")]),t._v(" "),v("td",[t._v("默认")])]),t._v(" "),v("tr",[v("td",[t._v("do")]),t._v(" "),v("td",[t._v("运行")])]),t._v(" "),v("tr",[v("td",[t._v("else")]),t._v(" "),v("td",[t._v("否则")])]),t._v(" "),v("tr",[v("td",[t._v("for")]),t._v(" "),v("td",[t._v("循环")])]),t._v(" "),v("tr",[v("td",[t._v("if")]),t._v(" "),v("td",[t._v("如果")])]),t._v(" "),v("tr",[v("td",[t._v("instanceof")]),t._v(" "),v("td",[t._v("实例")])]),t._v(" "),v("tr",[v("td",[t._v("return")]),t._v(" "),v("td",[t._v("返回")])]),t._v(" "),v("tr",[v("td",[t._v("switch")]),t._v(" "),v("td",[t._v("根据值选择执行")])]),t._v(" "),v("tr",[v("td",[t._v("while")]),t._v(" "),v("td",[t._v("循环")])]),t._v(" "),v("tr",[v("td",{attrs:{rowspan:"6",align:"center"}},[t._v("错误处理")]),t._v(" "),v("td",[t._v("assert")]),t._v(" "),v("td",[t._v("断言表达式是否为真")])]),t._v(" "),v("tr",[v("td",[t._v("catch")]),t._v(" "),v("td",[t._v("捕捉异常")])]),t._v(" "),v("tr",[v("td",[t._v("finally")]),t._v(" "),v("td",[t._v("有没有异常都执行")])]),t._v(" "),v("tr",[v("td",[t._v("throw")]),t._v(" "),v("td",[t._v("抛出一个异常对象")])]),t._v(" "),v("tr",[v("td",[t._v("throws")]),t._v(" "),v("td",[t._v("声明一个异常可能被抛出")])]),t._v(" "),v("tr",[v("td",[t._v("try")]),t._v(" "),v("td",[t._v("捕获异常")])]),t._v(" "),v("tr",[v("td",{attrs:{rowspan:"2",align:"center"}},[t._v("包相关")]),t._v(" "),v("td",[t._v("import")]),t._v(" "),v("td",[t._v("引入")])]),t._v(" "),v("tr",[v("td",[t._v("package")]),t._v(" "),v("td",[t._v("包")])]),t._v(" "),v("tr",[v("td",{attrs:{rowspan:"8",align:"center"}},[t._v("基本类型")]),t._v(" "),v("td",[t._v("boolean")]),t._v(" "),v("td",[t._v("布尔型")])]),t._v(" "),v("tr",[v("td",[t._v("byte")]),t._v(" "),v("td",[t._v("字节型")])]),t._v(" "),v("tr",[v("td",[t._v("char")]),t._v(" "),v("td",[t._v("字符型")])]),t._v(" "),v("tr",[v("td",[t._v("double")]),t._v(" "),v("td",[t._v("双精度浮点")])]),t._v(" "),v("tr",[v("td",[t._v("float")]),t._v(" "),v("td",[t._v("单精度浮点")])]),t._v(" "),v("tr",[v("td",[t._v("int")]),t._v(" "),v("td",[t._v("整型")])]),t._v(" "),v("tr",[v("td",[t._v("long")]),t._v(" "),v("td",[t._v("长整型")])]),t._v(" "),v("tr",[v("td",[t._v("short")]),t._v(" "),v("td",[t._v("短整型")])]),t._v(" "),v("tr",[v("td",{attrs:{rowspan:"3",align:"center"}},[t._v("变量引用")]),t._v(" "),v("td",[t._v("super")]),t._v(" "),v("td",[t._v("父类,超类")])]),t._v(" "),v("tr",[v("td",[t._v("this")]),t._v(" "),v("td",[t._v("本类")])]),t._v(" "),v("tr",[v("td",[t._v("void")]),t._v(" "),v("td",[t._v("无返回值")])]),t._v(" "),v("tr",[v("td",{attrs:{rowspan:"3",align:"center"}},[t._v("保留关键字")]),t._v(" "),v("td",[t._v("goto")]),t._v(" "),v("td",[t._v("是关键字，但不能使用")])]),t._v(" "),v("tr",[v("td",{},[t._v("const")]),t._v(" "),v("td",{},[t._v("是关键字，但不能使用")])]),t._v(" "),v("tr",[v("td",{},[t._v("null")]),t._v(" "),v("td",{},[t._v("空")])])])]),t._v(" "),v("h2",{attrs:{id:"java-注释"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java-注释"}},[t._v("#")]),t._v(" Java 注释")]),t._v(" "),v("p",[t._v("类似于 C/C++、Java 也支持单行以及多行注释。注释中的字符将被 Java 编译器忽略。")]),t._v(" "),v("p",[t._v('public class HelloWorld { /* 这是第一个 Java 程序 * 它将输出 Hello World * 这是一个多行注释的示例 */ public static void main(String[] args){ // 这是单行注释的示例 /* 这个也是单行注释的示例 */ System.out.println("Hello World"); } }')]),t._v(" "),v("hr"),t._v(" "),v("h2",{attrs:{id:"java-空行"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java-空行"}},[t._v("#")]),t._v(" Java 空行")]),t._v(" "),v("p",[t._v("空白行或者有注释的行，Java 编译器都会忽略掉。")]),t._v(" "),v("hr"),t._v(" "),v("h2",{attrs:{id:"继承"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#继承"}},[t._v("#")]),t._v(" 继承")]),t._v(" "),v("p",[t._v("在 Java 中，一个类可以由其他类派生。如果你要创建一个类，而且已经存在一个类具有你所需要的属性或方法，那么你可以将新创建的类继承该类。")]),t._v(" "),v("p",[t._v("利用继承的方法，可以重用已存在类的方法和属性，而不用重写这些代码。被继承的类称为超类（super class），派生类称为子类（subclass）。")]),t._v(" "),v("hr"),t._v(" "),v("h2",{attrs:{id:"接口"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#接口"}},[t._v("#")]),t._v(" 接口")]),t._v(" "),v("p",[t._v("在 Java 中，接口可理解为对象间相互通信的协议。接口在继承中扮演着很重要的角色。")]),t._v(" "),v("p",[t._v("接口只定义派生要用到的方法，但是方法的具体实现完全取决于派生类。")]),t._v(" "),v("hr"),t._v(" "),v("h2",{attrs:{id:"java-源程序与编译型运行区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java-源程序与编译型运行区别"}},[t._v("#")]),t._v(" Java 源程序与编译型运行区别")]),t._v(" "),v("p",[t._v("如下图所示：")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://www.runoob.com/wp-content/uploads/2013/12/ZSSDMld.png",alt:""}})]),t._v(" "),v("p",[t._v("下一节介绍 Java 编程中的类和对象。之后你将会对 Java 中的类和对象有更清楚的认识。")])])}),[],!1,null,null,null);a.default=_.exports}}]);